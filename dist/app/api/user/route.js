import { NextResponse } from "next/server";
import prisma from '@/lib/prisma';
export async function POST(req) {
    try {
        const { telegramId, firstName, username } = await req.json();
        if (!telegramId) {
            return NextResponse.json({ error: "telegramId is required" }, { status: 400 });
        }
        // Check if user already exists
        const existingUser = await prisma.user.findUnique({
            where: { telegramId: String(telegramId) },
        });
        if (existingUser) {
            return NextResponse.json({ user: existingUser, message: "User already exists" });
        }
        // Create new user with a unique userId (auto-generated by Prisma)
        const newUser = await prisma.user.create({
            data: {
                telegramId: String(telegramId),
                firstName: firstName || '',
                username: username || ''
            },
        });
        return NextResponse.json({ user: newUser, message: "User created" });
    }
    catch (error) {
        console.error("Error in user creation:", error);
        return NextResponse.json({ error: "Internal server error" }, { status: 500 });
    }
}
